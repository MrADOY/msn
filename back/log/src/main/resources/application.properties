## Proprietes du serveur
server.port= 5002

## Identification de la connexion avec la BDD ici sur AWS pour les tests
## Pour se connecter a la BDD 
## mysql -h usersdbinstance.cgsqgc82vizd.eu-west-3.rds.amazonaws.com -P 3306 -u root -p

## INSERT INTO roles(type) VALUES('ROLE_USER');
#@ INSERT INTO roles(type) VALUES('ROLE_ADMIN');

##AWS
spring.datasource.url= jdbc:mysql://usersdbinstance.cgsqgc82vizd.eu-west-3.rds.amazonaws.com:3306/utilisateurs?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
spring.datasource.username= root	
spring.datasource.password= aqzsaqzs

##BDD Nicolas
##spring.datasource.url= jdbc:mysql://serveurnicoant.ddns.net:3306/messagerie?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
##spring.datasource.username= messagerie	
##spring.datasource.password= admin

## Proprietes d'hibernate

# Ces proprietes permettent une meilleure g�n�ration des tables pour la BDD
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Permet a SpringBoot d'update et creer les tables lors de l'instance
spring.jpa.hibernate.ddl-auto = update

## Hibernate Logging
logging.level.org.hibernate.SQL= DEBUG

## Proprietes pour les tokens
app.jwtSecret= JWTSuperSecretKey
## 1 heure
app.jwtExpirationInMs = 3600000

## Proprietes rabbitMQ local host
##rabbit.addr = localhost
##rabbit.port = 5672

## Proprietes rabbitMQ deploiement docker
rabbit.addr = serveurnicoant.ddns.net
rabbit.port = 5672

## Proprietes rabbitMQ deploiement docker
##rabbit.addr = 172.17.0.2
##rabbit.port = 5672